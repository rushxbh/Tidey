/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { AquaCoin, AquaCoinInterface } from "../../contracts/AquaCoin";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "initialOwner",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "allowance",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "needed",
        type: "uint256",
      },
    ],
    name: "ERC20InsufficientAllowance",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "balance",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "needed",
        type: "uint256",
      },
    ],
    name: "ERC20InsufficientBalance",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "approver",
        type: "address",
      },
    ],
    name: "ERC20InvalidApprover",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "receiver",
        type: "address",
      },
    ],
    name: "ERC20InvalidReceiver",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
    ],
    name: "ERC20InvalidSender",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "ERC20InvalidSpender",
    type: "error",
  },
  {
    inputs: [],
    name: "EnforcedPause",
    type: "error",
  },
  {
    inputs: [],
    name: "ExpectedPause",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "OwnableInvalidOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "OwnableUnauthorizedAccount",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "minter",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "status",
        type: "bool",
      },
    ],
    name: "MinterStatusChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Paused",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address[]",
        name: "recipients",
        type: "address[]",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "amounts",
        type: "uint256[]",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "totalAmount",
        type: "uint256",
      },
    ],
    name: "TokensAirdropped",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "string",
        name: "reason",
        type: "string",
      },
    ],
    name: "TokensMinted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Unpaused",
    type: "event",
  },
  {
    inputs: [],
    name: "MAX_SUPPLY",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "authorizedMinters",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "recipients",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "amounts",
        type: "uint256[]",
      },
      {
        internalType: "string",
        name: "reason",
        type: "string",
      },
    ],
    name: "batchMint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "burn",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "burnFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "getTokenInfo",
    outputs: [
      {
        internalType: "string",
        name: "name_",
        type: "string",
      },
      {
        internalType: "string",
        name: "symbol_",
        type: "string",
      },
      {
        internalType: "uint8",
        name: "decimals_",
        type: "uint8",
      },
      {
        internalType: "uint256",
        name: "totalSupply_",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "maxSupply_",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "isMinter",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "reason",
        type: "string",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "paused",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "remainingSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "volunteer",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "rewardVolunteer",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "volunteers",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "amounts",
        type: "uint256[]",
      },
    ],
    name: "rewardVolunteers",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "minter",
        type: "address",
      },
      {
        internalType: "bool",
        name: "status",
        type: "bool",
      },
    ],
    name: "setMinterStatus",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalMinted",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "unpause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b50604051611ce8380380611ce883398101604081905261002f91610317565b806040518060400160405280600881526020016720b8bab0a1b7b4b760c11b815250604051806040016040528060048152602001634151554160e01b815250816003908161007d91906103e6565b50600461008a82826103e6565b5050506001600160a01b0381166100bc57604051631e4fbdf760e01b8152600060048201526024015b60405180910390fd5b6100c581610161565b5069021e19e0c9bab24000006100db82826101b3565b80600681905550816001600160a01b03167f9d89e36eadf856db0ad9ffb5a569e07f95634dddd9501141ecf04820484ad0dc826040516101529181526040602082018190526015908201527f496e697469616c20737570706c79206d696e7465640000000000000000000000606082015260800190565b60405180910390a250506104cb565b600580546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6001600160a01b0382166101dd5760405163ec442f0560e01b8152600060048201526024016100b3565b6101e9600083836101ed565b5050565b6001600160a01b03831661021857806002600082825461020d91906104a4565b9091555061028a9050565b6001600160a01b0383166000908152602081905260409020548181101561026b5760405163391434e360e21b81526001600160a01b038516600482015260248101829052604481018390526064016100b3565b6001600160a01b03841660009081526020819052604090209082900390555b6001600160a01b0382166102a6576002805482900390556102c5565b6001600160a01b03821660009081526020819052604090208054820190555b816001600160a01b0316836001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8360405161030a91815260200190565b60405180910390a3505050565b60006020828403121561032957600080fd5b81516001600160a01b038116811461034057600080fd5b9392505050565b634e487b7160e01b600052604160045260246000fd5b600181811c9082168061037157607f821691505b60208210810361039157634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156103e157806000526020600020601f840160051c810160208510156103be5750805b601f840160051c820191505b818110156103de57600081556001016103ca565b50505b505050565b81516001600160401b038111156103ff576103ff610347565b6104138161040d845461035d565b84610397565b6020601f821160018114610447576000831561042f5750848201515b600019600385901b1c1916600184901b1784556103de565b600084815260208120601f198516915b828110156104775787850151825560209485019460019092019101610457565b50848210156104955786840151600019600387901b60f8161c191681555b50505050600190811b01905550565b808201808211156104c557634e487b7160e01b600052601160045260246000fd5b92915050565b61180e806104da6000396000f3fe608060405234801561001057600080fd5b50600436106101845760003560e01c80638456cb59116100d9578063abb1dc4411610087578063abb1dc4414610319578063d3fc986414610332578063da0239a614610345578063dd62ed3e1461034d578063e9f71e8514610360578063f00c298d14610373578063f2fde38b1461038657600080fd5b80638456cb591461029e5780638da5cb5b146102a657806395d89b41146102bf578063a2309ff8146102c7578063a9059cbb146102d0578063aa271e1a146102e3578063aa2fe91b146102f657600080fd5b80633f4ba83a116101365780633f4ba83a1461022457806342966c681461022c5780635156b97f1461023f5780635c975abb1461025257806370a082311461025a578063715018a61461028357806379cc67901461028b57600080fd5b806306fdde0314610189578063095ea7b3146101a757806318160ddd146101ca57806323b872dd146101dc578063313ce567146101ef57806332cb6b0c146101fe57806337f9fbdd1461020f575b600080fd5b610191610399565b60405161019e919061115e565b60405180910390f35b6101ba6101b5366004611194565b61042b565b604051901515815260200161019e565b6002545b60405190815260200161019e565b6101ba6101ea3660046111be565b610445565b6040516004815260200161019e565b6101ce69152d02c7e14af680000081565b61022261021d366004611287565b610469565b005b6102226106c8565b61022261023a36600461132a565b6106da565b61022261024d366004611343565b6106e6565b6101ba61095b565b6101ce6102683660046113b2565b6001600160a01b031660009081526020819052604090205490565b61022261096b565b610222610299366004611194565b61097d565b61022261098b565b6005546001600160a01b031660405161019e91906113cd565b61019161099b565b6101ce60065481565b6101ba6102de366004611194565b6109aa565b6101ba6102f13660046113b2565b6109b8565b6101ba6103043660046113b2565b60076020526000908152604090205460ff1681565b6103216109ef565b60405161019e9594939291906113e1565b610222610340366004611427565b610a27565b6101ce610b10565b6101ce61035b366004611474565b610b2f565b61022261036e366004611194565b610b5a565b6102226103813660046114a7565b610b74565b6102226103943660046113b2565b610c45565b6060600380546103a8906114e3565b80601f01602080910402602001604051908101604052809291908181526020018280546103d4906114e3565b80156104215780601f106103f657610100808354040283529160200191610421565b820191906000526020600020905b81548152906001019060200180831161040457829003601f168201915b5050505050905090565b600033610439818585610c80565b60019150505b92915050565b600033610453858285610c92565b61045e858585610ce6565b506001949350505050565b610471610d45565b610479610d72565b8483146104a15760405162461bcd60e51b81526004016104989061151d565b60405180910390fd5b846104be5760405162461bcd60e51b815260040161049890611552565b60c88511156104df5760405162461bcd60e51b815260040161049890611582565b6000805b848110156105a05760008888838181106104ff576104ff6115c9565b905060200201602081019061051491906113b2565b6001600160a01b03160361053a5760405162461bcd60e51b8152600401610498906115df565b600086868381811061054e5761054e6115c9565b90506020020135116105725760405162461bcd60e51b815260040161049890611624565b858582818110610584576105846115c9565b90506020020135826105969190611681565b91506001016104e3565b5069152d02c7e14af6800000816006546105ba9190611681565b11156105d85760405162461bcd60e51b815260040161049890611694565b60005b868110156106335761062b8888838181106105f8576105f86115c9565b905060200201602081019061060d91906113b2565b87878481811061061f5761061f6115c9565b90506020020135610d98565b6001016105db565b5080600660008282546106469190611681565b90915550506040517f3a5549528724b29f02f0b905549a7fbda1be1d9ba54835066663f03d8885eda79061068390899089908990899087906116c9565b60405180910390a160006001600160a01b03166000805160206117b98339815191528285856040516106b79392919061174e565b60405180910390a250505050505050565b6106d0610d45565b6106d8610dce565b565b6106e381610e1d565b50565b6106ee610d45565b6106f6610d72565b8281146107155760405162461bcd60e51b81526004016104989061151d565b826107325760405162461bcd60e51b815260040161049890611552565b60c88311156107535760405162461bcd60e51b815260040161049890611582565b6000805b82811015610814576000868683818110610773576107736115c9565b905060200201602081019061078891906113b2565b6001600160a01b0316036107ae5760405162461bcd60e51b8152600401610498906115df565b60008484838181106107c2576107c26115c9565b90506020020135116107e65760405162461bcd60e51b815260040161049890611624565b8383828181106107f8576107f86115c9565b905060200201358261080a9190611681565b9150600101610757565b5069152d02c7e14af68000008160065461082e9190611681565b111561084c5760405162461bcd60e51b815260040161049890611694565b60005b8481101561089b5761089386868381811061086c5761086c6115c9565b905060200201602081019061088191906113b2565b85858481811061061f5761061f6115c9565b60010161084f565b5080600660008282546108ae9190611681565b90915550506040517f3a5549528724b29f02f0b905549a7fbda1be1d9ba54835066663f03d8885eda7906108eb90879087908790879087906116c9565b60405180910390a160006001600160a01b03166000805160206117b98339815191528260405161094c91815260406020820181905260179082015276566f6c756e74656572206261746368207265776172647360481b606082015260800190565b60405180910390a25050505050565b600554600160a01b900460ff1690565b610973610d45565b6106d86000610e27565b6109878282610e79565b5050565b610993610d45565b6106d8610e8e565b6060600480546103a8906114e3565b600033610439818585610ce6565b6001600160a01b03811660009081526007602052604081205460ff168061043f5750506005546001600160a01b0391821691161490565b60608060008060006109ff610399565b610a0761099b565b60046002549298919750955090935069152d02c7e14af680000092509050565b610a2f610d45565b610a37610d72565b6001600160a01b038416610a5d5760405162461bcd60e51b8152600401610498906115df565b60008311610a7d5760405162461bcd60e51b815260040161049890611624565b69152d02c7e14af680000083600654610a969190611681565b1115610ab45760405162461bcd60e51b815260040161049890611694565b610abe8484610d98565b8260066000828254610ad09190611681565b92505081905550836001600160a01b03166000805160206117b9833981519152848484604051610b029392919061174e565b60405180910390a250505050565b600060065469152d02c7e14af6800000610b2a9190611784565b905090565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b610b62610d45565b610b6a610d72565b6109878282610d98565b610b7c610d45565b6001600160a01b038216610be65760405162461bcd60e51b815260206004820152602b60248201527f41717561436f696e3a2043616e6e6f7420736574207a65726f2061646472657360448201526a399030b99036b4b73a32b960a91b6064820152608401610498565b6001600160a01b038216600081815260076020908152604091829020805460ff191685151590811790915591519182527f3042b80e435ae46c334b2cfec51a66d64c9a8a8af4cd0c279a124c35a09e91dd910160405180910390a25050565b610c4d610d45565b6001600160a01b038116610c77576000604051631e4fbdf760e01b815260040161049891906113cd565b6106e381610e27565b610c8d8383836001610ed1565b505050565b6000610c9e8484610b2f565b9050600019811015610ce05781811015610cd157828183604051637dc7a0d960e11b815260040161049893929190611797565b610ce084848484036000610ed1565b50505050565b6001600160a01b038316610d10576000604051634b637e8f60e11b815260040161049891906113cd565b6001600160a01b038216610d3a57600060405163ec442f0560e01b815260040161049891906113cd565b610c8d838383610fa6565b6005546001600160a01b031633146106d8573360405163118cdaa760e01b815260040161049891906113cd565b610d7a61095b565b156106d85760405163d93c066560e01b815260040160405180910390fd5b6001600160a01b038216610dc257600060405163ec442f0560e01b815260040161049891906113cd565b61098760008383610fa6565b610dd66110bd565b6005805460ff60a01b191690557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa335b604051610e1391906113cd565b60405180910390a1565b6106e333826110e2565b600580546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b610e84823383610c92565b61098782826110e2565b610e96610d72565b6005805460ff60a01b1916600160a01b1790557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258610e063390565b6001600160a01b038416610efb57600060405163e602df0560e01b815260040161049891906113cd565b6001600160a01b038316610f25576000604051634a1406b160e11b815260040161049891906113cd565b6001600160a01b0380851660009081526001602090815260408083209387168352929052208290558015610ce057826001600160a01b0316846001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92584604051610f9891815260200190565b60405180910390a350505050565b6001600160a01b038316610fd1578060026000828254610fc69190611681565b909155506110309050565b6001600160a01b038316600090815260208190526040902054818110156110115783818360405163391434e360e21b815260040161049893929190611797565b6001600160a01b03841660009081526020819052604090209082900390555b6001600160a01b03821661104c5760028054829003905561106b565b6001600160a01b03821660009081526020819052604090208054820190555b816001600160a01b0316836001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040516110b091815260200190565b60405180910390a3505050565b6110c561095b565b6106d857604051638dfc202b60e01b815260040160405180910390fd5b6001600160a01b03821661110c576000604051634b637e8f60e11b815260040161049891906113cd565b61098782600083610fa6565b6000815180845260005b8181101561113e57602081850181015186830182015201611122565b506000602082860101526020601f19601f83011685010191505092915050565b6020815260006111716020830184611118565b9392505050565b80356001600160a01b038116811461118f57600080fd5b919050565b600080604083850312156111a757600080fd5b6111b083611178565b946020939093013593505050565b6000806000606084860312156111d357600080fd5b6111dc84611178565b92506111ea60208501611178565b929592945050506040919091013590565b60008083601f84011261120d57600080fd5b5081356001600160401b0381111561122457600080fd5b6020830191508360208260051b850101111561123f57600080fd5b9250929050565b60008083601f84011261125857600080fd5b5081356001600160401b0381111561126f57600080fd5b60208301915083602082850101111561123f57600080fd5b600080600080600080606087890312156112a057600080fd5b86356001600160401b038111156112b657600080fd5b6112c289828a016111fb565b90975095505060208701356001600160401b038111156112e157600080fd5b6112ed89828a016111fb565b90955093505060408701356001600160401b0381111561130c57600080fd5b61131889828a01611246565b979a9699509497509295939492505050565b60006020828403121561133c57600080fd5b5035919050565b6000806000806040858703121561135957600080fd5b84356001600160401b0381111561136f57600080fd5b61137b878288016111fb565b90955093505060208501356001600160401b0381111561139a57600080fd5b6113a6878288016111fb565b95989497509550505050565b6000602082840312156113c457600080fd5b61117182611178565b6001600160a01b0391909116815260200190565b60a0815260006113f460a0830188611118565b82810360208401526114068188611118565b60ff9690961660408401525050606081019290925260809091015292915050565b6000806000806060858703121561143d57600080fd5b61144685611178565b93506020850135925060408501356001600160401b0381111561146857600080fd5b6113a687828801611246565b6000806040838503121561148757600080fd5b61149083611178565b915061149e60208401611178565b90509250929050565b600080604083850312156114ba57600080fd5b6114c383611178565b9150602083013580151581146114d857600080fd5b809150509250929050565b600181811c908216806114f757607f821691505b60208210810361151757634e487b7160e01b600052602260045260246000fd5b50919050565b6020808252818101527f41717561436f696e3a20417272617973206c656e677468206d69736d61746368604082015260600190565b60208082526016908201527541717561436f696e3a20456d7074792061727261797360501b604082015260600190565b60208082526027908201527f41717561436f696e3a20546f6f206d616e7920726563697069656e747320286d6040820152666178203230302960c81b606082015260800190565b634e487b7160e01b600052603260045260246000fd5b60208082526025908201527f41717561436f696e3a2043616e6e6f74206d696e7420746f207a65726f206164604082015264647265737360d81b606082015260800190565b60208082526027908201527f41717561436f696e3a20416d6f756e74206d75737420626520677265617465726040820152660207468616e20360cc1b606082015260800190565b634e487b7160e01b600052601160045260246000fd5b8082018082111561043f5761043f61166b565b6020808252818101527f41717561436f696e3a2045786365656473206d6178696d756d20737570706c79604082015260600190565b6060808252810185905260008660808301825b8881101561170a576001600160a01b036116f584611178565b168252602092830192909101906001016116dc565b5083810360208501528581526001600160fb1b0386111561172a57600080fd5b8560051b915081876020830137604093909301939093525001602001949350505050565b83815260406020820152816040820152818360608301376000818301606090810191909152601f909201601f1916010192915050565b8181038181111561043f5761043f61166b565b6001600160a01b03939093168352602083019190915260408201526060019056fe9d89e36eadf856db0ad9ffb5a569e07f95634dddd9501141ecf04820484ad0dca2646970667358221220b19a3c63c94ff515afc7de4dac8a14140d303d2b8b85db6559b08982082ca9d364736f6c634300081c0033";

type AquaCoinConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: AquaCoinConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class AquaCoin__factory extends ContractFactory {
  constructor(...args: AquaCoinConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    initialOwner: string,
    overrides?: Overrides & { from?: string }
  ): Promise<AquaCoin> {
    return super.deploy(initialOwner, overrides || {}) as Promise<AquaCoin>;
  }
  override getDeployTransaction(
    initialOwner: string,
    overrides?: Overrides & { from?: string }
  ): TransactionRequest {
    return super.getDeployTransaction(initialOwner, overrides || {});
  }
  override attach(address: string): AquaCoin {
    return super.attach(address) as AquaCoin;
  }
  override connect(signer: Signer): AquaCoin__factory {
    return super.connect(signer) as AquaCoin__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): AquaCoinInterface {
    return new utils.Interface(_abi) as AquaCoinInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): AquaCoin {
    return new Contract(address, _abi, signerOrProvider) as AquaCoin;
  }
}
